import SideNav from '@/cmps/SideNav'
import Head from 'next/head'

import styles from '../styles/pages/_explore.module.scss'

import { CiSearch } from 'react-icons/ci'
import MovieList from '@/cmps/MovieList'
import { useState } from 'react'
import Movie from '@/interfaces/movie'

import MovieDetails from '@/cmps/MovieDetails'

type Props = {
  movies: Movie[]
}

export default function Explore({ movies }: Props) {
  const [movieDetailsToShow, setMovieDetailsToShow] = useState<Movie | null>(
    null
  )

  return (
    <>
      <Head>
        <title>Videoplus - Explore</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.explore}>
        <SideNav pageName="explore" />

        <div className={styles.container}>
          {/* INPUT */}
          <div className={styles['search-container']}>
            <div>
              <span>
                <CiSearch />
              </span>
              <input type="text" placeholder="Movies, shows and more" />
            </div>
          </div>

          {/* LIST */}
          <p className={styles.title}>Popular Searches</p>
          <MovieList
            movies={movies}
            setMovieDetailsToShow={setMovieDetailsToShow}
          />
        </div>
        {movieDetailsToShow && (
          <MovieDetails
            movie={movieDetailsToShow}
            setMovieDetailsToShow={setMovieDetailsToShow}
          ></MovieDetails>
        )}
      </main>
    </>
  )
}

export async function getServerSideProps(context: any) {
  try {
    const res = await fetch(
      `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.NEXT_PUBLIC_TMDB_API}&language=en-US&page=1`
    )
    const json = await res.json()
    const movies = json.results

    return {
      props: {
        movies,
      },
    }
  } catch (err) {
    const tempData = await import('../data/top-rated.json')

    return {
      props: {
        movies: tempData.results,
      },
    }
  }
}
